#pragma once
#include <ntifs.h>
#include "memory.h"
#include "globals.h"

enum CallRequests
{
	TEST_CALL				  = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1487, METHOD_BUFFERED, FILE_SPECIAL_ACCESS),
	BSOD_CALL				  = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1489, METHOD_BUFFERED, FILE_SPECIAL_ACCESS),
	READ_VIRTUAL_MEMORY_CALL  = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1490, METHOD_BUFFERED, FILE_SPECIAL_ACCESS),
	WRITE_VIRTUAL_MEMORY_CALL = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1491, METHOD_BUFFERED, FILE_SPECIAL_ACCESS),
	GET_CLIENTDLL_ADDR		  = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1492, METHOD_BUFFERED, FILE_SPECIAL_ACCESS),
	GET_CSGO_PID			  = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x1493, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
};

class Communication
{
public:
	static NTSTATUS CreateCall(PDEVICE_OBJECT pDeviceObject, PIRP Irp);
	static NTSTATUS CloseCall (PDEVICE_OBJECT pDeviceObject, PIRP Irp);
	static NTSTATUS IoControll(PDEVICE_OBJECT pDeviceObject, PIRP Irp);
};
struct DriverData
{
	PDEVICE_OBJECT pDeviceObject;
	UNICODE_STRING dev, dos;
};
